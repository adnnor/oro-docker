version: "3"

services:
  app:
    image: adnnor/nginx:1.18
    volumes: &appvolumes
      - ~/.composer:/var/www/.composer:cached
      - ~/.ssh:/var/www/.ssh:cached
      - ~/.ssh/known_hosts:/var/www/.ssh/known_hosts:cached
      - ./src:/var/www/html:cached
      - ./conf/nginx.default.conf:/etc/nginx/conf.d/default.conf:cached
      - ./conf/.env-app.local:/var/www/html/.env-app.local:cached
      - sockdata:/sock
      - ssldata:/etc/nginx/certs
    networks:
      - oro
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.vibe.rule=Host(`vibe.local`)"
      - "traefik.http.services.vibe.loadbalancer.server.port=8000"
      
  phpfpm:
    image: adnnor/php:8.3-fpm
    volumes: *appvolumes
    networks:
      - oro
    env_file: env/phpfpm.env

  traefik:
    image: traefik:v2.5
    ports:
      - "8088:80"
      - "8443:443"
      - "8083:8080"
    networks:
      - oro
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
      - "./traefik.yml:/etc/traefik/traefik.yml"
      - "./acme.json:/acme.json"
    labels:
      - "traefik.enable=true"
      # Dashboard access
      - "traefik.http.routers.traefik-dashboard-vibe.rule=Host(`traefik.vibe.local`)"
      - "traefik.http.routers.traefik-dashboard-vibe.service=api@internal"
      #- "traefik.http.services.traefik-dashboard-vibe.loadbalancer.server.port=8083"      

#  supervisor:
#    image: adnnor/supervisor
#    volumes:
#      - ./src:/var/www/html
#      - ./conf/supervisoro2network.conf:/etc/supervisoro2network.conf
#    depends_on:
#      - phpfpm
#    networks:
#      - oro
#    restart: always
#    command: /bin/sh -c "rm -f /tmp/supervisor.sock && supervisoro2network -n"

  postgres:
    image: postgres:latest
    command:
      - "--max_connections=200"
      - "--shared_buffers=256MB"
    env_file: env/postgres.env
    networks:
      - oro
    labels:
      - "traefik.enable=true"
      - "traefik.tcp.routers.postgres-vibe.rule=HostSNI(`postgres.vibe.local`)"
      - "traefik.tcp.services.postgres-vibe.loadbalancer.server.port=5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
        
  pgadmin:
    image: dpage/pgadmin4
    depends_on:
      - postgres
    env_file: env/pgadmin.env
    networks:
      - oro    
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.pgadmin-vibe.rule=Host(`pgadmin.vibe.local`)"
      - "traefik.http.services.pgadmin-vibe.loadbalancer.server.port=80"
    volumes:
    - pgadmin-data:/var/lib/pgadmin
    restart: always

  elasticsearch:
    image: adnnor/elasticsearch:8.4
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.elasticsearch-vibe.rule=Host(`elasticsearch.vibe.local`)"
      - "traefik.http.services.elasticsearch-vibe.loadbalancer.server.port=9200"
    env_file: env/elasticsearch.env
    environment:
      - "discovery.type=single-node"
      ## Avoid test failures due to small disks
      ## More info at https://github.com/markshust/docker-magento/issues/488
      - "cluster.routing.allocation.disk.threshold_enabled=false"
      - "index.blocks.read_only_allow_delete"
      ## Uncomment to set custom heap size to avoid memory errors
      - "ES_JAVA_OPTS=-Xms1g -Xmx1g"
      ## Uncomment to increase the virtual memory map count
      - "max_map_count=262144"
            
#  redis:
#    image: redis:6.0-alpine
#    ports:
#      - "6379:6379"
      
#  rabbitmq:
#    image: rabbitmq:3.11-management-alpine
#    ports:
#      - "15672:15672"
#      - "5672:5672"
#    volumes:
#      - rabbitmqdata:/var/lib/rabbitmq
#    env_file: env/rabbitmq.env
    
#  mailcatcher:
#    image: sj26/mailcatcher
#    ports:
#      - "1080:1080"
      
networks:
  oro:
    driver: bridge
    
volumes:
  appdata:
  dbdata:
  rabbitmqdata:
  pgadmin-data:
  sockdata:
  ssldata:
  postgres-data:
